{title [Compile]}
{mod demo@0.6.2, ucs cfr, global []}
{global, no-count, html, demo []}
['STDN can be compiled to html. To be exact, a stdn will be compiled to a '{href https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment, a [document fragment]}.]
[]
This article is for explaining the compile of stdn. Compiled results are illustrated by html in this article.
[]
['All the source code of compile is in '{href https://github.com/st-org/stc/blob/main/src/mod.ts, a [mod.ts]}.]
[]
{h1 [Line]}
Each line will be compiled to a div with "st-line" class.
[]
{demo [
    first line
    ['second '{span [line]}]
]}
[]
{h1 [Unit]}
['Each unit will be compiled to a html element or svg element. If the unit is a '{src global.stdn#global-tag-unit, a [global tag unit]}' or '{src global.stdn#global-option-units, a [global option unit]}', then it will be compiled to an empty div. If there is a corresponding unit compiler of the real tag, then the unit will be compiled using the unit compiler. If the real tag is in the supported list in '{src html.stdn#supported-html-elements, a [html.stdn]}', then the unit will be compiled to a corresponding html element. If the real tag is in the supported list in '{src svg.stdn#supported-svg-elements-and-attributes, a [svg.stdn]}', then the unit will be compiled to a corresponding svg element. Otherwise, the unit will be compiled to a div.']
[]
The real tag is non-empty "compile-with" option or non-empty global "compile-with" option of the tag or the tag.
[]
['Built-in unit compilers can be found via '{href https://github.com/st-org/st-std/blob/main/src/ucs.ts, a [ucs.ts]}. You can import other unit compilers using global tag units.]
[]
'Class list of the compiled result will contain "unit", the real tag, class names in "class" option and class names in global "class" option of the tag.'
[]
'If the unit is not a global tag unit or global option unit and "no-count" option is not true and global "no-count" option of the tag is not true, then the unit is "countable".'
[]
The compiled result of a countable unit will have id which is from string value "id" option or the children of the unit. The precise process is showed in the following code.
[]
{lang js, code [
    'function stringToId(string){'
    '    return Array.from(string.slice(0,100).matchAll(/[a-zA-Z0-9]+/g)).join(\'-\').toLowerCase()'
    '}'
    'const baseId=stringToId(typeof unit.options.id===\'string\'?unit.options.id:stdnToInlinePlainString(unit.children))'
    'const count=baseIdToCount[baseId]=(baseIdToCount[baseId]??0)+1'
    'const id=count>1||baseId.length===0?`${baseId}~${count}`:baseId'
]}
[]
['General non-stdn value options will be added to the compiled result if the corresponding attribute is not set by unit compiler. The corresponding attribute will have "data-" prefix if the option is not in the supported list in '{src html.stdn#supported-html-attributes, a [html.stdn]}' and the supported list in '{src svg.stdn#supported-svg-elements-and-attributes, a [svg.stdn]}.]
[]
{demo [{src https://st-org.github.io/imgs/st.png, img []}]}
[]
{h1 [Index]}
An index will be given to the countable unit according to the orbit and the level of the unit.
[]
'The orbit is non-empty orbit option or non-empty global orbit option of the tag or the tag. The level is non-empty level option or non-empty global level option of the tag or non-empty global level option of the orbit or 1. H6 tag units are special. Their default orbit is heading and their default level is 6. H1, h2, h3, h4, h5 are similar.'
[]
Countable units with the same orbit and level will be ordered togather and given the index one by one. The index will be reset by any countable unit whose orbit is heading and whose level is smaller than the level of the units to be indexed.
[]
['Indexes can be accessed in unit compilers and are put into compiled results by built-in unit compilers for '{src index.stdn, a [index units]}.]
[]
{h1 [Children]}
'If a unit is not compiled using a unit compiler, then the children of the unit will be compiled to a document fragment which will be appended to the compiled result of the unit. If the tag is in the following list, then the children will be compiled in inline way. Otherwise, the children will be compiled in normal way. Normal way is exactly the way in which a stdn is compiled.'
[]
{dt [Supported html elements with inline children]}
{dd [a abbr b bdi bdo br cite code data dfn em i kbd mark q rp rt ruby s samp small span strong sub sup time u var wbr audio img track video iframe del ins col colgroup table tbody tfoot thead tr]}
[]
{h2 [Inline Way]}
{demo [
    //
    {span [
        first line
        second line
    ]}
]}
[]
{h2 [Normal Way]}
{demo [
    //
    {div [
        first line
        second line
    ]}
]}
[]