{title [STON]}
{css-src common.css, global []}
STON is short for simple text object notation.
[]
{id string, orbit heading, h2 [String]}
{h3 [Unquoted]}
{two [
    {display [STON]}
    {display [JSON]}
    {lang ston, code [unquoted string]}
    {lang json, code ["unquoted string"]}
]}
[]
['Unquoted strings can not contain '{code ['\',{}[]\n\r']}' and can not start with whitespace or end with whitespace. There is no escape in unquoted strings.']
[]
{h3 [Quoted]}
{two [
    {display [STON]}
    {display [JSON]}
    {lang ston, code ['\'\pi\\\\\pi\\\\\'']}
    {lang json, code ["\\pi\\\\pi\\"]}
]}
[]
['Strings can only be quoted with single quotes. Only '{code ['\'']}' and '{code [\]}' can be escaped. '{code [\]}' need not to be escaped if there is no confusion.']
[]
{h3 [Multi-Line]}
{two [
    {display [STON]}
    {display [JSON]}
    {lang ston, code [
        '\'multi-line'
        'string\n\''
    ]}
    {lang json, block, code ["multi-line\nstring\\n"]}
]}
[]
{id number, orbit heading, h2 [Number]}
{lang ston, code ['.5']}
{lang ston, code ['+1']}
{lang ston, code ['2e-3']}
{lang ston, code ['-Infinity']}
{lang ston, code ['NaN']}
{lang ston, code ['0xFF']}
{lang ston, code ['0xff']}
{lang ston, code ['0b11']}
{lang ston, code ['0o66']}
[]
{id boolean, orbit heading, h2 [Boolean]}
{lang ston, code ['true']}
{lang ston, code ['false']}
[]
{id array, orbit heading, h2 [Array]}
{two [
    {display [STON]}
    {display [JSON]}
    {lang ston, code ['[\'hellow \'world, !]']}
    {lang json, code ['["hello ","world","!"]']}
    {lang ston, code [
        '['
        '    \'hellow \''
        '    world'
        '    !'
        ']'
    ]}
    {lang json, code [
        '['
        '    "hello ",'
        '    "world",'
        '    "!"'
        ']'
    ]}
]}
[]
Commas and spaces can be omitted if there is no confusion.
[]
[{lang ston, code ['[,\'hellow \'world, , !,]']}' is equivalent to '{lang ston, code ['[\'hellow \'world, !]']}]
[]
{id object, orbit heading, h2 [Object]}
{two [
    {display [STON]}
    {display [JSON]}
    {lang ston, code ['{key\'value\' standalone-key, \'standalone-value\'}']}
    {lang json, code ['{"key":"value","standalone-key":true,"__":"standalone-value"}']}
    {lang ston, code [
        '{'
        '    key value'
        '    standalone-key'
        '    \'standalone-value\''
        '}'
    ]}
    {lang json, code [
        '{'
        '    "key": "value",'
        '    "standalone-key": true,'
        '    "__": "standalone-value"'
        '}'
    ]}
]}
[]
Commas and spaces can be omitted if there is no confusion.
[]
[{lang ston, code ['{,key\'value\' standalone-key, , \'standalone-value\',}']}' is equivalent to '{lang ston, code ['{key\'value\' standalone-key, \'standalone-value\'}']}]
[]
Default value is true. Default key is __.
[]
['Keys can only contain English letters and '{code [_-]}' and can not be quoted.']
[]
There is no colon between key and value.
[]
{id comment, orbit heading, h2 [Comment]}
{lang ston, code [
    '{'
    '    key value'
    '    // default value is true'
    '    standalone-key'
    '    /*'
    '     default key is __'
    '     */'
    '    \'standalone-value\''
    '}'
]}
[]
Comments can only be add above an item in array or object.
[]